// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: same_name_enum.proto
package com.squareup.wire.protos.kotlin

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.TagHandler
import com.squareup.wire.WireField
import kotlin.Int
import kotlin.jvm.JvmField
import okio.ByteString

data class MessageUsingMultipleEnums(
    @field:WireField(tag = 1, adapter =
            "com.squareup.wire.protos.kotlin.MessageWithStatus.Status.ADAPTER") val a:
            MessageWithStatus.Status? = null,
    @field:WireField(tag = 2, adapter =
            "com.squareup.wire.protos.kotlin.OtherMessageWithStatus.Status.ADAPTER") val b:
            OtherMessageWithStatus.Status? = null,
    val unknownFields: ByteString = ByteString.EMPTY
) : Message<MessageUsingMultipleEnums, MessageUsingMultipleEnums.Builder>(ADAPTER, unknownFields) {
    override fun newBuilder(): Builder {
        val builder = Builder()
        builder.a = a
        builder.b = b
        builder.addUnknownFields(unknownFields())
        return builder
    }

    class Builder : Message.Builder<MessageUsingMultipleEnums, Builder>() {
        internal var a: MessageWithStatus.Status? = null

        internal var b: OtherMessageWithStatus.Status? = null

        fun a(a: MessageWithStatus.Status?): Builder {
            this.a = a
            return this
        }

        fun b(b: OtherMessageWithStatus.Status?): Builder {
            this.b = b
            return this
        }

        override fun build(): MessageUsingMultipleEnums = MessageUsingMultipleEnums(
            a = a,
            b = b,
            unknownFields = buildUnknownFields()
        )
    }

    companion object {
        @JvmField
        val ADAPTER: ProtoAdapter<MessageUsingMultipleEnums> = object :
                ProtoAdapter<MessageUsingMultipleEnums>(
            FieldEncoding.LENGTH_DELIMITED, 
            MessageUsingMultipleEnums::class.java
        ) {
            override fun encodedSize(value: MessageUsingMultipleEnums): Int = 
                MessageWithStatus.Status.ADAPTER.encodedSizeWithTag(1, value.a) +
                OtherMessageWithStatus.Status.ADAPTER.encodedSizeWithTag(2, value.b) +
                value.unknownFields.size

            override fun encode(writer: ProtoWriter, value: MessageUsingMultipleEnums) {
                MessageWithStatus.Status.ADAPTER.encodeWithTag(writer, 1, value.a)
                OtherMessageWithStatus.Status.ADAPTER.encodeWithTag(writer, 2, value.b)
                writer.writeBytes(value.unknownFields)
            }

            override fun decode(reader: ProtoReader): MessageUsingMultipleEnums {
                var a: MessageWithStatus.Status? = null
                var b: OtherMessageWithStatus.Status? = null
                val unknownFields = reader.forEachTag { tag ->
                    when (tag) {
                        1 -> a = MessageWithStatus.Status.ADAPTER.decode(reader)
                        2 -> b = OtherMessageWithStatus.Status.ADAPTER.decode(reader)
                        else -> TagHandler.UNKNOWN_TAG
                    }
                }
                return MessageUsingMultipleEnums(
                    a = a,
                    b = b,
                    unknownFields = unknownFields
                )
            }
        }
    }
}
